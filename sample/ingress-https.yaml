
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-echo-go
  namespace: default
  labels:
    app: my-echo-go
spec:
  selector:
    matchLabels:
      app: my-echo-go
  replicas: 1
  template:
    metadata:
      labels:
        app: my-echo-go
    spec:
      containers:
        - image: azssi/my-echo-go
          name: echo-server
          imagePullPolicy: Always
          env:
            - name: CERT_PATH
              value: "/tmp/tls.crt"
            - name: PRIVATE_KEY_PATH
              value: "/tmp/tls.key"
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          volumeMounts:
            - name: cert
              mountPath: /tmp/tls.crt
              subPath: tls.crt
            - name: cert
              mountPath: /tmp/tls.key
              subPath: tls.key
      volumes:
        - name: cert
          secret:
            secretName: my-echo-go-secret
---
apiVersion: v1
kind: Service
metadata:
  name: my-echo-go
  namespace: default
spec:
  selector:
    app: my-echo-go
  ports:
    - protocol: TCP
      port: 443
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx-shd
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  #    cert-manager.io/issuer: intermediate-issuer
  name: my-echo-go-tls
  namespace: default
spec:
  rules:
    - host: my-echo-go.172.22.11.10.nip.io
      http:
        paths:
          - pathType: Prefix
            path: /echo(/|$)(.*)
            backend:
              service:
                name: my-echo-go
                port:
                  number: 18080
  tls:
    - hosts:
        - my-echo-go.172.22.11.10.nip.io
      secretName: my-echo-go-tls-secret
